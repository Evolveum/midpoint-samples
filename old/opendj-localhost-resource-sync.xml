<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2011 Evolveum                             -->
<!--                                                         -->
<!-- The contents of this file are subject to the terms      -->
<!-- of the Common Development and Distribution License      -->
<!-- (the License). You may not use this file except in      -->
<!-- compliance with the License.                            -->
<!--                                                         -->
<!-- You can obtain a copy of the License at                 -->
<!-- http://www.opensource.org/licenses/cddl1 or             -->
<!-- CDDLv1.0.txt file in the source code distribution.      -->
<!-- See the License for the specific language governing     -->
<!-- permission and limitations under the License.           -->
<!--                                                         -->
<!-- If applicable, add the following below the CDDL Header, -->
<!-- with the fields enclosed by brackets [] replaced by     -->
<!-- your own identifying information:                       -->
<!--                                                         -->
<!-- Portions Copyrighted 2011 [name of copyright owner]     -->
<!-- Portions Copyrighted 2010 Forgerock                     -->
<!--                                                         -->



<!--

This file is an example of Resource definition. It defines an LDAP resource
using an Identity Connector Framework LDAP connector. It contains proper schema
for use with a stock OpenDJ and OpenDS servers.

This resource definition contains also definition to enable synchronization.

-->

<c:objects xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd"
           xmlns:i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2"
           xmlns:ids="http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/resource-schema-1.xsd">


    <c:resource oid="ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2">
        <c:name>Localhost OpenDJ</c:name>
        <c:type>http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/resourceaccessconfiguration-1.xsd</c:type>

        <!-- Resource namespace. This is important. All resource schema elements should be in this namespace. -->
        <c:namespace>http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2</c:namespace>

        <!-- Configuration section contains configuration of the connector,
             such as hostnames and passwords -->
        <c:configuration>

            <!-- Configuration of ICF connector -->
            <idc:ConnectorConfiguration xmlns:idc="http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/configuration-1.xsd"
                                        xmlns:iccldap="http://midpoint.evolveum.com/xml/ns/resource/idconnector/bundle/org.identityconnectors.ldap/org.identityconnectors.ldap.LdapConnector/1.0.5531">

                <!-- Definition of ICF bundle name, version and connector name -->
                <idc:ConnectorRef bundleName="org.identityconnectors.ldap" bundleVersion="1.0.5754openidm" connectorName="org.identityconnectors.ldap.LdapConnector">
                </idc:ConnectorRef>

                <!-- Propeties of ICF connector bundle. The applicable element
                     names can be found in the ICF connector documentation -->
                <idc:BundleProperties>
                    <iccldap:port>1389</iccldap:port>
                    <iccldap:host>localhost</iccldap:host>
                    <iccldap:baseContexts>dc=example,dc=com</iccldap:baseContexts>
                    <iccldap:principal>uid=idm,ou=Administrators,dc=example,dc=com</iccldap:principal>
                    <iccldap:credentials>secret</iccldap:credentials>
                    <iccldap:modifiersNamesToFilterOut>uid=idm,ou=Administrators,dc=example,dc=com</iccldap:modifiersNamesToFilterOut>
                    <iccldap:usePagedResultControl>true</iccldap:usePagedResultControl>
                </idc:BundleProperties>

                <!-- ICF Pooling options -->
                <idc:PoolConfigOption minEvictTimeMillis="5000" minIdle="5" maxIdle="30" maxObjects="120" maxWait="5000"/>

                <!-- Timout setting for individual ICF operations -->
                <idc:OperationTimeouts>
                    <idc:OperationTimeout name="create" timeout="50000"/>
                    <idc:OperationTimeout name="update" timeout="50000"/>
                    <idc:OperationTimeout name="delete" timeout="50000"/>
                    <idc:OperationTimeout name="test" timeout="50000"/>
                    <idc:OperationTimeout name="scriptOnConnector" timeout="50000"/>
                    <idc:OperationTimeout name="scriptOnResource" timeout="50000"/>
                    <idc:OperationTimeout name="get" timeout="50000"/>
                    <idc:OperationTimeout name="authenticate" timeout="50000"/>
                    <idc:OperationTimeout name="search" timeout="50000"/>
                    <idc:OperationTimeout name="validate" timeout="50000"/>
                    <idc:OperationTimeout name="sync" timeout="50000"/>
                    <idc:OperationTimeout name="schema" timeout="50000"/>
                </idc:OperationTimeouts>
            </idc:ConnectorConfiguration>
        </c:configuration>

        <!-- Resource schema definition.
             It defines all the object classes that are available to midPoint
             (accounts, groups, ...).

             This should be direct mapping of ICF schema (and therefore also
             LDAP schema). This is not supposed to be customized during deployment
             unless the underlying LDAP schema is non-standard (also see below).

             This should be generated from the resource by the connector, but
             this is not in midPoint yet. Therefore it needs to be provided manually for now. -->
        <c:schema>
            <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
                        targetNamespace="http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2"
                        elementFormDefault="qualified"
                        xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd"
                        xmlns:r="http://midpoint.evolveum.com/xml/ns/public/resource/resource-schema-1.xsd"
                        xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2"
                        xmlns:ids="http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/resource-schema-1.xsd">
                <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/resource-schema-1.xsd"/>
                <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd"/>
                <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/resource/resource-schema-1.xsd"/>

                <!-- Definition of Account object class -->
                <xsd:complexType name="Account">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <r:identifier ref="ids:__UID__"/>
                            <r:secondaryIdentifier ref="ids:__NAME__"/>
                            <r:displayName ref="ri:uid"/>
                            <r:descriptionAttribute ref="ri:description"/>
                            <r:nativeObjectClass>__ACCOUNT__</r:nativeObjectClass>
                            <r:accountType default="true"/>
                        </xsd:appinfo>
                    </xsd:annotation>
                    <xsd:complexContent>
                        <xsd:extension base="r:ResourceObjectClass">
                            <xsd:sequence>
                                <xsd:element ref="ids:__NAME__">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>__NAME__</r:nativeAttributeName>
                                            <r:attributeDisplayName>DN</r:attributeDisplayName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="description" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:help>DESCRIPTION_NAME_HELP_KEY</r:help>
                                            <r:nativeAttributeName>description</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element ref="ids:__PASSWORD__">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:attributeFlag>PASSWORD</r:attributeFlag>
                                            <r:classifiedAttribute>
                                                <r:encryption>HASH</r:encryption>
                                                <r:classificationLevel>password</r:classificationLevel>
                                            </r:classifiedAttribute>
                                            <r:nativeAttributeName>__PASSWORD__</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element name="sn" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>sn</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element name="cn" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>cn</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element ref="ids:__UID__" minOccurs="0">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:attributeFlag>NOT_UPDATEABLE</r:attributeFlag>
                                            <r:nativeAttributeName>__UID__</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="givenName" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>givenName</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="uid" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>givenName</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:extension>
                    </xsd:complexContent>
                </xsd:complexType>

                <!-- Definition of Gropup object class. It is not used directly now. -->
                <xsd:complexType name="Group">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <r:identifier ref="ids:__UID__"/>
                            <r:secondaryIdentifier ref="ids:__NAME__"/>
                            <r:displayName ref="ri:description"/>
                            <r:descriptionAttribute ref="ri:description"/>
                            <r:nativeObjectClass>__GROUP__</r:nativeObjectClass>
                            <r:container/>
                        </xsd:appinfo>
                    </xsd:annotation>
                    <xsd:complexContent>
                        <xsd:extension base="r:ResourceObjectClass">
                            <xsd:sequence>
                                <xsd:element ref="ids:__NAME__">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:nativeAttributeName>__NAME__</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="description" type="xsd:string">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:help>DESCRIPTION_NAME_HELP_KEY</r:help>
                                            <r:nativeAttributeName>description</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                                <xsd:element ref="ids:__UID__">
                                    <xsd:annotation>
                                        <xsd:appinfo>
                                            <r:attributeFlag>NOT_UPDATEABLE</r:attributeFlag>
                                            <r:nativeAttributeName>__UID__</r:nativeAttributeName>
                                        </xsd:appinfo>
                                    </xsd:annotation>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:extension>
                    </xsd:complexContent>
                </xsd:complexType>
            </xsd:schema>
        </c:schema>

        <!-- Resource Schema Handling definition.
             This part defines how the schema defined above will be used by
             midPoint. It defines expressions and limitations for individual
             schema attributes.

             The expressions that describe both inbound and outbound flow of
             the attributes are defined in this section.

             This is the part where most of the customization takes place.
        -->
        <c:schemaHandling>

            <!-- Definition of default account type.
                 This is now the only account type that midPoint can work with. -->
            <c:accountType default="true">

                <!-- Readable name for the account type -->
                <c:name>Default Account</c:name>

                <!-- Reference to the Resoure Schema (see above) specifying
                     object class for this account type -->
                <i:objectClass>ri:Account</i:objectClass>

                <!-- Definition of __NAME__ attribute handling.
                     ICF will put entry DN into __NAME__ attribute.-->
                <i:attribute ref="ids:__NAME__">

                    <!-- Readable name for the attribute. This will be used in GUI -->
                    <c:name>Distinguished Name</c:name>

                    <!-- Access limitation for this attribute.
                         In our case ICF will put DN in the __NAME__ attribute.
                         Althouhg DN can be theoretically changes, this definition
                         will make it immutable. -->
                    <c:access>create</c:access>
                    <c:access>read</c:access>

                    <!-- Outbound expression for the __NAME__ attribute.
                         If account is created or updated, the __NAME__ attribute
                         will be set accrding to this expression.

                         This specific expression will construct DN by concatenating
                         name from user object and string constants.

                         The expression is marked as "default", therefore it will
                         be evaluated only if the entry already does not have an DN.

                         It is an XPath expression, similar to BPEL assignment expressions. -->
                    <i:outbound default="true">
                        <i:valueExpression>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            concat('uid=', $i:user/c:name, ',ou=people,dc=example,dc=com')
                            </i:valueExpression>
                    </i:outbound>

                    <!-- No inbound expression here. We cannot sync changes in DN yet -->

                </i:attribute>

                <!-- Definition of __UID__ attribute handling.
                     ICF will put entry UUID into __UID__ attribute in case it
                     is connecting to OpenDJ/OpenDS. It may be different for
                     other directory servers and it also dependes on connector
                     configuration. Please see connector documentation for
                     more details.-->
                <i:attribute ref="ids:__UID__">

                    <!-- Readable name for the attribute. This will be used in GUI -->
                    <c:name>Entry UUID</c:name>

                    <!-- Access limitation for this attribute.
                         Entry UUID is created by the directory server itelf
                         and it is immutable. We can only read it. -->
                    <c:access>read</c:access>

                    <!-- There is no "outbound" expression, so midPoint will not
                         do anything with this attribute. -->

                    <!-- No inbound expression here. Does not make sense to sync UUID as it is supposed to be immutable -->

                </i:attribute>

                <!-- Definition of cn attribute handling. -->
                <i:attribute ref="ri:cn">
                    
                    <c:name>Common Name</c:name>
                    <c:access>create</c:access>
                    <c:access>read</c:access>
                    <c:access>update</c:access>

                    <!-- Outbound expression here is using "pure" XPath, without
                         using functions. This is the simplest case, just copying
                         the "fullName" property of user to the "cn" attribute of
                         an account.

                         Please note that this expression is not marked as "default".
                         Therefore this value will be copied on every change,
                         overwriting the original value of "cn" on the resource.
                     -->
                    <i:outbound>
                        <i:valueExpression>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:fullName
                        </i:valueExpression>
                    </i:outbound>

                    <!-- Inbound expression. It is used to synchronize changes
                         in the account to the user object in the IDM. This
                         expression specifies to copy the cn attribute value
                         from the account to the fullName property of the user.
                     -->
                    <i:inbound>
                        <i:target>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:fullName
                        </i:target>
                    </i:inbound>

                </i:attribute>

                <!-- Definition of sn attribute handling. -->
                <i:attribute ref="ri:sn">
                    <c:name>Surname</c:name>
                    <c:access>create</c:access>
                    <c:access>read</c:access>
                    <c:access>update</c:access>
                    <i:outbound>
                        <i:valueExpression>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:familyName
                        </i:valueExpression>
                    </i:outbound>
                    <!-- sn will be synchronized to user's familyName -->
                    <i:inbound>
                        <i:target>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:familyName
                        </i:target>
                    </i:inbound>
                </i:attribute>

                <!-- Definition of givenName attribute handling. -->
                <i:attribute ref="ri:givenName">
                    <c:name>Given Name</c:name>
                    <c:access>create</c:access>
                    <c:access>read</c:access>
                    <c:access>update</c:access>
                    <i:outbound>
                        <i:valueExpression>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:givenName
                        </i:valueExpression>
                    </i:outbound>
                    <!-- givenName will be synchronized to user's givenName -->
                    <i:inbound>
                        <i:target>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:givenName
                        </i:target>
                    </i:inbound>
                </i:attribute>

                <!-- Definition of uid attribute handling.
                     Do not confuse with __UID__! -->
                <i:attribute ref="ri:uid">
                    <c:name>Login Name</c:name>
                    <c:access>create</c:access>
                    <c:access>read</c:access>
                    <i:outbound>
                        <!-- It is mapped from (and also to) "name" property of
                             user. It is essentially a login name -->
                        <i:valueExpression>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:name
                        </i:valueExpression>
                    </i:outbound>
                        <!-- It is mapped to (and also from) "name" property of
                             user. It is essentially a login name -->
                    <i:inbound>
                        <i:target>
                            declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                            $i:user/i:name
                        </i:target>
                    </i:inbound>
                </i:attribute>

                <!-- Definition of description attribute handling. -->
                <i:attribute ref="ri:description">

                    <!-- This outbound expression is not really an expression.
                         It is using a fixed literal insead of dynamically
                         generated value. -->
                    <i:outbound default="true">
                        <i:value>Created by IDM</i:value>
                    </i:outbound>
                    <!-- No outbound expression for description. We don't want to synchronize that -->
                </i:attribute>
                
                <!-- outbound password synchronization enabled, random password will be size of 4 when not defined -->
                <i:credentials>
                    <i:outboundPassword>true</i:outboundPassword>
                    <i:randomPasswordLength>4</i:randomPasswordLength>
                </i:credentials>                
            </c:accountType>
        </c:schemaHandling>

        <!--
            Synchronization section describes the synchronization policy, timing,
            reactions and similar synchronization settings.
        -->
        <i:synchronization>
            <!--
                The synchronization for this resource is enabled.
                It means that the synchronization will poll for changes once
                per interval specified below. -->
            <i:enabled>true</i:enabled>

            <!-- Synchronization polling interval, in seconds -->
            <i:pollingInterval>60</i:pollingInterval>

            <!-- Correlation expression.
                 It will be used to find appropriate user entry for an account.
              -->
            <i:correlation> <!-- Correlation rule is a search query -->
            <!-- The clause <c:type uri="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd#UserType"/> is implicit in correlation rules -->
                <!-- Following search queury will look for users that have "name"
                     equal to the "uid" attribute of the account. Simply speaking,
                     it will look for match in usernames in the IDM and the resource. -->
                <c:equal>
                    <c:path>.</c:path>
                    <c:valueExpression>
			<c:ref>c:name</c:ref>
			<c:code>
	                        declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
        	                declare namespace dj="http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-48e2-86d6-3d4f02d3e1a2";
        	                $i:account/i:attributes/dj:uid
			</c:code>
                    </c:valueExpression>
                </c:equal>
            </i:correlation>

            <!-- Confirmation rule may be here, but as the search above will
                 always return at most one match, the confirmation rule is not needed. -->

            <!-- Following section describes reactions to a situations.
                 The setting here assumes that this resource is authoritative,
                 therefore all accounts created on the resource should be
                 reflected as new users in IDM.
                 See http://wiki.evolveum.com/display/midPoint/Synchronization+Situations
             -->
            <i:reaction>
                <i:situation>confirmed</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#modifyUser"/>
            </i:reaction>
            <i:reaction>
                <i:situation>deleted</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#unlinkAccount"/>
            </i:reaction>
            <i:reaction>
                <i:situation>missing</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#unlinkAccount"/>
            </i:reaction>
            <i:reaction>
                <i:situation>found</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#linkAccount"/>
            </i:reaction>
            <i:reaction>
                <i:situation>unassigned</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#linkAccount"/>
            </i:reaction>
            <i:reaction>
                <i:situation>unmatched</i:situation>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#addUser">
                    <!-- Reference to the User Template is here. If the user would be
                         created as a result of this action, it will be created according
                         to this template. -->
                    <i:userTemplateRef oid="c0c010c0-d34d-b33f-f00d-777111111111"/>
                </i:action>
                <i:action ref="http://midpoint.evolveum.com/xml/ns/public/model/action-1#linkAccount"/>
            </i:reaction>

        </i:synchronization>

    </c:resource>

     <!-- User Template Object.
          This object is used when creating a new account, to set it up as needed.
     -->
     <i:userTemplate oid="c0c010c0-d34d-b33f-f00d-777111111111">
        <c:name>Default User Template</c:name>

        <!-- Property construction.
             Defines how properties of user object are set up.
             This specific definition sets a full name as a concatenation
             of givenName and familyName. -->
        <i:propertyConstruction>
            <i:property>i:fullName</i:property>
            <i:valueConstruction default="true">
                <i:valueExpression>
                    declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-1.xsd";
                    concat($i:user/i:givenName,' ',$i:user/i:familyName)
                </i:valueExpression>
            </i:valueConstruction>
        </i:propertyConstruction>

        <!-- Account construction.
             Defines what accounts should be assigned to a user when it is
             created. It only defines resource and account type. The rest of the
             account parameters are specified by outbound expressions in the
             account type in the resource definition, as usual.
             See http://wiki.evolveum.com/display/midPoint/Synchronization
             -->
        <i:accountConstruction>
            <i:resourceRef oid="c0c010c0-d34d-b33f-f00d-333111111112" type="i:ResourceType"/>
            <i:type>default</i:type>
        </i:accountConstruction>

    </i:userTemplate>

</c:objects>
