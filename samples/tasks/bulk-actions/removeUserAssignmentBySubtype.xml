<!--
  ~ Copyright (c) 2010-2025 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!--
Task to iteratively process the user Objects containing assignment with the subtype field
containing the specific value (as it is multi value field all the values are checked).

The value is located:
 - query ( 52 ) : to reduce amount objects to process
 - condition ( 74 ) : to remove only relevant assignment and keep the other one(s)

The sample tasks is prepared im preview mode so the changes are just simulated - "simulation
result" is available after the task finished.

To process the changes (not only simulate) comment or remove the elements <execution> and
<reporting> ( 99 - 111 ).
-->
<task xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
      xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
      xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
      xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"
      oid="9b1f6d8e-63f1-4a79-abc5-55350688dc1a">
    <name>Remove users' assignment by subtype value</name>
    <assignment>
        <targetRef oid="00000000-0000-0000-0000-000000000509" type="c:ArchetypeType"/>
    </assignment>
    <ownerRef oid="00000000-0000-0000-0000-000000000002" type="c:UserType"/>
    <executionState>runnable</executionState>
    <schedule>
        <recurrence>single</recurrence>
    </schedule>
    <activity>
        <work>
            <iterativeScripting>
                <objects>
                    <type>c:UserType</type>
                    <query>
                        <q:filter>
                            <!-- Query filter to reduce amount of object to process -->
                            <q:text>assignment/subtype = "test"</q:text>
                        </q:filter>
                    </query>
                </objects>
                <scriptExecutionRequest xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3">
                    <s:execute>
                        <s:script>
                            <code>

                                import com.evolveum.midpoint.prism.path.ItemPath
                                import com.evolveum.midpoint.xml.ns._public.common.common_3.AssignmentType
                                import com.evolveum.midpoint.xml.ns._public.common.common_3.UserType

                                def deltas = null

                                // Iterate the assignments on the object
                                for (AssignmentType iterAssignment in input.getAssignment()) {
                                    // continue only in case there is set the subtype value
                                    if (iterAssignment.getSubtype().size() > 0) {
                                        // iterate over all the subtype values (multi-value field)
                                        for (String iterSubtype in iterAssignment.getSubtype()) {
                                            // Check if the current assignment contain the requested keyword
                                            if ( iterSubtype == "test") {
                                                // create empty delta "structure" for user if it doesn't exists yet
                                                if (deltas == null) {
                                                    deltas = midpoint.deltaFor(UserType.class)
                                                }
                                                // add current assignment to remove into the delta
                                                deltas = deltas.item(ItemPath.create(UserType.F_ASSIGNMENT))
                                                        .delete(iterAssignment.clone())
                                            }
                                        }
                                    }
                                }
                                // process only in the case the delta is exists
                                if (deltas) {
                                    // prepare the delta object for the currently processing user object
                                    deltas = deltas.asObjectDeltas(input.getOid())
                                    // execute the delta - remove the assignment
                                    midpoint.executeChanges(deltas)
                                }
                            </code>
                        </s:script>
                    </s:execute>
                </scriptExecutionRequest>
            </iterativeScripting>
        </work>
        <!-- Don't perform the changes! Only run simulation with production configuration (see "lifecycle state") -->
        <execution>
            <mode>preview</mode>
            <configurationToUse>
                <predefined>production</predefined>
            </configurationToUse>
        </execution>
        <!-- create the report with the simulated result - to see what would change in case of regular run -->
        <reporting>
            <simulationResult>
                <enabled>true</enabled>
            </simulationResult>
        </reporting>
    </activity>
</task>
